1 answer>>>>>>>>>>>>>>>>>>>>>>>>>

        int sum = 0;
        while (number > 0) {
            sum += number % 10;
            number /= 10;
        }
        System.out.println(sum);


2 answer>>>>>>>>>>>>>>>>>>>>>>>>>

        long factorial = 1;
        for (int i = 1; i <= n; i++) {
            factorial *= i;
        }
        System.out.println(factorial);


3 answer>>>>>>>>>>>>>>>>>>>>>>>>>
        int reverse = 0;
        while (number > 0) {
            reverse = reverse * 10 + number % 10;
            number /= 10;
        }
        System.out.println(reverse);

4 answer>>>>>>>>>>>>>>>>>>>

        boolean isPrime = (number > 1);
        for (int i = 2; i * i <= number; i++) {
            if (number % i == 0) {
                isPrime = false;
                break;
            }
        }
        System.out.println(isPrime ? "Prime" : "Not Prime");

  5 answer>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

// Step 1: Check if matrix multiplication is possible
        if (cols1 != rows2) {
            System.out.println("Multiplication Not Possible");
            return;
        }

        // Step 2: Initialize the result matrix with dimensions [rows1][cols2]
        int[][] result = new int[rows1][cols2];

        // Step 3: Perform matrix multiplication
        for (int i = 0; i < rows1; i++) {
            for (int j = 0; j < cols2; j++) {
                for (int k = 0; k < cols1; k++) {
                    result[i][j] += matrix1[i][k] * matrix2[k][j];
                }
            }
        }

        // Step 4: Print the resultant matrix
        for (int i = 0; i < rows1; i++) {
            for (int j = 0; j < cols2; j++) {
                System.out.print(result[i][j]);
                if (j < cols2 - 1) {
                    System.out.print(" "); // Ensure no trailing space at end of row
                }
            }
            System.out.println(); // Move to next row
        }

